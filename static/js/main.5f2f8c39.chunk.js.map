{"version":3,"sources":["Header.js","FilterList.js","Operators.js","OperatorList.js","Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","FilterList","filterListener","e","filterType","preventDefault","props","Fragment","Object","entries","this","filters","map","data-name","key","value","data-selected","onClick","React","Component","operators","JSON","parse","stringify","ops","OperatorList","op","opClick","filterCollect","filterTags","type","rarity","typeKey","push","rarityKey","filterOps","filterKeys","keys","filter","operator","every","length","includes","stats","toString","filteredOps","src","icon","alt","name","baseUrl","Modal","onClose","displayTalents","talentObject","talent","desc","displaySkills","skillObject","skill","spInitial","spCost","chargeType","activation","duration","show","hp","atk","def","res","cost","block","traits","talents","skills","App","currentTarget","dataset","setState","prevState","selectedOp","state","Vanguard","Guard","Defender","Medic","Caster","Supporter","Sniper","Specialist","6","5","4","3","2","1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f2f8c39.chunk.js","sourcesContent":["// Header.js\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"App-header\">\r\n            <div className=\"wrapper\">\r\n                <h1>Arknights Interactive Operator List</h1>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","// FilterList.js\r\n\r\nimport React from \"react\";\r\n\r\nexport default class FilterList extends React.Component {\r\n\r\n    filterListener = (e, filterType) => {\r\n        e.preventDefault();\r\n        this.props.filterListener(e, filterType);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                { // types of filters\r\n                    Object.entries(this.props.filters).map((filters) => {\r\n                        // console.log(filters[1]);\r\n                        return (\r\n                            <ul className=\"filter-list flex flex-wrap\" key={filters[0]} data-name={filters[0]}>\r\n                                { // individual filters\r\n                                    Object.entries(filters[1]).map(([key, value]) => {\r\n                                        // console.log(key, value);\r\n                                        return (\r\n                                            <li className=\"filter-element\" key={key} data-name={key} data-selected={value}\r\n                                                onClick={e => this.filterListener(e, filters[0])}>\r\n                                                {key + (filters[0] === 'rarity' ? \"\\u2606\" : \"\")}\r\n                                                <div className=\"overlay\"></div>\r\n                                            </li>\r\n                                        );\r\n                                    })}\r\n                            </ul>\r\n                        );\r\n                    })\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","// Operators.js\r\nimport ops from './json/operators.json';\r\nconst operators = JSON.parse(JSON.stringify(ops));\r\nexport default operators;","// OperatorList.js\r\n\r\nimport React from \"react\"\r\nimport operators from './Operators.js';\r\n\r\nconst baseUrl = \"https://gamepress.gg\"\r\nexport default class OperatorList extends React.Component {\r\n\r\n    onClick = op => {\r\n        this.props.opClick(op);\r\n    }\r\n\r\n    filterCollect = () => {\r\n        const filterTags = {\r\n            type: [],\r\n            rarity: []\r\n        };\r\n        const { type, rarity } = this.props.filters;\r\n        for (let typeKey in type) {\r\n            if (type[typeKey]) filterTags.type.push(typeKey);\r\n        }\r\n        for (let rarityKey in rarity) {\r\n            if (rarity[rarityKey]) filterTags.rarity.push(rarityKey);\r\n        }\r\n        return filterTags;\r\n    }\r\n\r\n    filterOps = (operators, filters) => {\r\n        const filterKeys = Object.keys(filters);\r\n        return operators.filter(operator => {\r\n            return filterKeys.every(key => {\r\n                if (!filters[key].length) return true;\r\n\r\n                return filters[key].includes(operator.stats[key].toString());\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const filters = this.filterCollect();\r\n        const filteredOps = this.filterOps(operators, filters);\r\n        // console.log(filters);\r\n\r\n        return (\r\n            <ul className=\"operator-list\">\r\n                {filteredOps.map((operator) => {\r\n\r\n                    return (\r\n                        <li className=\"op-list-element\" key={operator.name} onClick={() => { this.onClick(operator); }}>\r\n                            <img src={baseUrl + operator.icon} alt={operator.name} className={`icon rarity-${operator.stats.rarity}`} />\r\n                            <div className=\"overlay\"></div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}","// Modal.js\r\nimport React from \"react\";\r\n\r\nconst baseUrl = \"https://gamepress.gg\";\r\nexport default class Modal extends React.Component {\r\n\r\n    onClose = e => {\r\n        this.props.onClose && this.props.onClose(e);\r\n    }\r\n\r\n    displayTalents = talentObject => {\r\n        if (talentObject.length === 0) return \"None\";\r\n        return (\r\n            <React.Fragment>\r\n                {talentObject.map((talent) => {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h4>{talent.name}</h4>\r\n                            <p>{talent.desc}</p>\r\n                        </React.Fragment>\r\n                    )\r\n                })}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    displaySkills = skillObject => {\r\n        if (skillObject.length === 0) return \"None\";\r\n        return (\r\n            <React.Fragment>\r\n                {skillObject.map((skill) => {\r\n                    return (\r\n                        <div className=\"skill\">\r\n                            <div className=\"flex flex-center\">\r\n                                <img className=\"skill-icon\" src={baseUrl + skill.icon} alt={`${skill.name} icon`} />\r\n                                <div className=\"skill-info\">\r\n                                    <h4>{skill.name}</h4>\r\n                                    <p>Initial SP: {skill.spInitial}<br />\r\n                                        SP Cost: {skill.spCost}<br />\r\n                                        Charge Type: {skill.chargeType}<br />\r\n                                        Activation: {skill.activation}<br />\r\n                                        Duration: {skill.duration}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"skill-description\">\r\n                                <p>Description: {skill.desc}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.props.show) return null;\r\n        return (\r\n            <div className=\"modal\">\r\n                <div className=\"modal-content wrapper flex flex-align modal-direction\">\r\n                    <div className=\"profile modal-module\">\r\n\r\n                        <img className={`modal-icon rarity-${this.props.op.stats.rarity}`} src={baseUrl + this.props.op.icon} alt={this.props.op.name} />\r\n\r\n                        <p>{this.props.op.name}<br />\r\n                            Type: {this.props.op.stats.type}<br />\r\n                            Rarity: {this.props.op.stats.rarity}&#x2606;</p>\r\n                        <p>Stats (at Max)</p>\r\n                        <p>HP: {this.props.op.stats.hp}<br />\r\n                            ATK: {this.props.op.stats.atk}<br />\r\n                            DEF: {this.props.op.stats.def}<br />\r\n                            RES: {this.props.op.stats.res}<br />\r\n                            Cost: {this.props.op.stats.cost}<br />\r\n                            Block: {this.props.op.stats.block}<br /></p>\r\n\r\n                        <p>Traits: {this.props.op.traits}</p>\r\n                    </div>\r\n                    <div className=\"description modal-module\">\r\n                        <h3>Talents:</h3>\r\n                        {this.displayTalents(this.props.op.talents)}\r\n                        <h3>Skills: </h3>\r\n                        {this.displaySkills(this.props.op.skills)}\r\n                    </div>\r\n                </div>\r\n                <button className=\"modal-close\" onClick={this.onClose}>X</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import './App.css';\nimport React from \"react\";\nimport Header from './Header.js';\nimport FilterList from './FilterList.js';\nimport OperatorList from './OperatorList.js';\nimport Modal from './Modal.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      selectedOp: null,\n      filterTags: {\n        type: {\n          Vanguard: false,\n          Guard: false,\n          Defender: false,\n          Medic: false,\n          Caster: false,\n          Supporter: false,\n          Sniper: false,\n          Specialist: false\n        },\n        rarity: {\n          6: false,\n          5: false,\n          4: false,\n          3: false,\n          2: false,\n          1: false\n        }\n      }\n    }\n  };\n\n  filterListener = (e, filterType) => {\n    // console.log(\"Filter clicked: \", e.currentTarget.dataset.name, filterType);\n    const name = e.currentTarget.dataset.name;\n    this.setState(prevState => ({\n      filterTags: {\n        ...prevState.filterTags,\n        [filterType]: {\n          ...prevState.filterTags[filterType],\n          [name]: !prevState.filterTags[filterType][name]\n        }\n      }\n    }))\n  }\n\n  opClick = op => {\n    this.setState(prevState => ({\n      show: !prevState.show,\n      selectedOp: op\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <main className=\"wrapper\">\n\n          <FilterList\n            filters={this.state.filterTags}\n            filterListener={this.filterListener} />\n\n          <OperatorList\n            filters={this.state.filterTags}\n            opClick={this.opClick} />\n\n          <Modal\n            onClose={this.opClick}\n            show={this.state.show}\n            op={this.state.selectedOp} />\n        </main>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}